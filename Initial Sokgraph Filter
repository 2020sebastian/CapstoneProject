/*
This is just a basic overview of how we are going to
eliminate a large portion of our dictionary.
All we have to do is record the start and end coordinates
and record the length of the sokgraph that the user traces.
*/

//The distance of the sokgraph can use the simple distance formula

float distanceFormula(x1,y1,x2,y2){
	return (Sqrt((x1^2 - x2^2) + (y1^2 - y2^2)))
}

/*
Easy way to calculate the distance for our sokgraphs
is by using a for loop that executes one less time than
the total number of coordinates for our graph.
In this example I am using an array for both x and y
coordinates and plugging them into our distanceFormula.
*/

totalDistance = 0;

for( i = 1; i < length; i++){
	totalDistance += distanceFormula(x[i],y[i],x[i+1],y[i+1]);
}

/*
By using a simple SQL statement we can eliminate
a great portion of all the sokgraphs in our database.
This SQL statement will grab the 10 closest matches
to the absolute value of the difference in totalDistance.

First we specify which columns we want to grab from the
table Sokgraphs

In the WHERE clause we are specifying that we only want
Sokgraphs that have the begin and end points that match
our user input

The ORDER BY is sorting our results in ascending order based
on column 5, which is the Distance Difference.

Lastely I am limiting the results to 10 records. We can
easily change this to a smaller value. This gives us our
N-Best results.
*/

SELECT		BeginX, BeginY, EndX, EndY,
			ABS(SokLength - totalDistance) "Distance Difference"
FROM		Sokgraphs
WHERE		BeginX = x[1] AND BeginY = y[1] AND
			EndX = x[length] AND EndY = y[length]
ORDER BY	5 ASC
LIMIT 		10


